name: AWS Provisioning

on:
  workflow_dispatch:
    inputs:
      resource_type:
        description: 'AWS resource type (e.g., s3, ec2)'
        required: true
        type: choice
        options:
          - s3
          - ec2-linux
          - ec2-windows
          - kms
          - rds
          - sqs
      terraform_action:
        description: 'terraform command to execute'
        required: true
        type: choice
        default: apply
        options:
          - apply
          - destroy
      request_id:
        description: 'Jira Ticket Id'
        required: true
        type: string
      variables:
        description: 'Variables for the resource in JSON format'
        required: true
        type: string

env:
  TF_BACKEND_BUCKET: "terraform-automation-state-store"
  TF_BACKEND_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read
  actions: read
  security-events: write

jobs:
  provision:
    name: AWS Provisioning - ${{ github.event.inputs.resource_type }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    # General Role for Workflow
    - name: Configure AWS credentials - General Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
        aws-region: ${{ env.TF_BACKEND_REGION }}

    - name: Create variables file
      id: create_vars
      run: echo '${{ github.event.inputs.variables }}' > ./aws/${{ github.event.inputs.resource_type }}/variables.tfvars.json

    - name: Verify variables file
      run: ls -l ./aws/${{ github.event.inputs.resource_type }}/variables.tfvars.json

    - name: Show contents of variables file
      run: cat ./aws/${{ github.event.inputs.resource_type }}/variables.tfvars.json

    # Switch to Backend Role for Terraform State
    - name: Configure AWS credentials - Backend Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.STATE_BACKEND_AWS_ROLE }}
        aws-region: ${{ env.TF_BACKEND_REGION }}

    - name: Initialize Terraform
      run: |
        terraform init \
        -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
        -backend-config="region=${{ env.TF_BACKEND_REGION }}" \
        -backend-config="key=${{ github.event.inputs.resource_type }}/${{ github.event.inputs.request_id }}/tf-state"
      working-directory: ./aws/${{ github.event.inputs.resource_type }}

    # Switch Back to General Role for Resource Creation
    - name: Configure AWS credentials - General Role (Switch Back)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
        aws-region: ${{ env.TF_BACKEND_REGION }}

    - name: Apply Terraform
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      run: terraform apply -auto-approve -var-file=variables.tfvars.json
      working-directory: ./aws/${{ github.event.inputs.resource_type }}

    - name: Destroy Terraform
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      run: terraform destroy -auto-approve -var-file=variables.tfvars.json
      working-directory: ./aws/${{ github.event.inputs.resource_type }}

    - name: Output Results
      run: terraform output
      working-directory: ./aws/${{ github.event.inputs.resource_type }}
